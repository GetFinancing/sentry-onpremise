# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '3.4'

x-defaults: &defaults
  restart: unless-stopped
  build: .
  depends_on:
    - redis
    - db
#    - postgres
#    - memcached
#    - smtp
  env_file:
    - .env
  environment:
#    SENTRY_MEMCACHED_HOST: memcached
    SENTRY_REDIS_HOST: redis
    SENTRY_DB_HOST: db
#    SENTRY_POSTGRES_HOST: postgres
  volumes:
    - sentry-data:/var/lib/sentry/files


services:
#  smtp:
#    restart: unless-stopped
#    image: tianon/exim4
#
#  memcached:
#    restart: unless-stopped
#    image: memcached:1.4
#
  redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  db:
    restart: unless-stopped
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: "!123"
      MYSQL_DATABASE: "sentry"
      MYSQL_USER: "sentry"
      MYSQL_PASSWORD: "!456"
    volumes:
    - sentry-db:/var/lib/mysql

  phpmyadmin:
    restart: unless-stopped
    image: phpmyadmin/phpmyadmin
    links:
    - db:db
    ports:
    - 9091:80
#
#  postgres:
#    restart: unless-stopped
#    image: postgres:9.5
#    volumes:
#      - sentry-postgres:/var/lib/postgresql/data

  web:
    <<: *defaults
    ports:
      - '9000:9000'

  cron:
    <<: *defaults
    command: run cron

  worker:
    <<: *defaults
    command: run worker


volumes:
    sentry-data:
    sentry-db:
